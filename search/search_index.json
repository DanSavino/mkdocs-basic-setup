{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"raw/deploy/","title":"Deploy file","text":"<p>This webpage deployment.md file. <pre><code>    # Preparing for deployment\n\nAfter you have a fully working page. Commit your project to GitHub and use GitHubPages or even ReadTheDocs to host it.\n\n1. Create your GitHub repositorie\n2. Inicialize git in your project page\n3. Commit your project to GitHub main branch\n4. Run mkdocs deploy command ```\nmkdocs gh-deploy\n```\n5. Your documentation will be available in a couple minutes on https://{your-github-user}.github.io/{repositorie}\n\n!!! warning If mkdocs gh-deploy ran successfully and your page is not online.\nCheck GitHubPages settings ou your repositorie. Make sure your source is *branch gh-pages*.\n\nPs: The documentation can be add to ReadTheDocs by importing your GitHub project.\n</code></pre></p>"},{"location":"raw/mkdocs/","title":"Mkdocs yaml file","text":"<p>This webpage mkdocs.yml file. <pre><code>    site_name: Studying Mkdocs\n\nnav:\n- Getting Started:\n- Welcome to Mkdocs: index.md\n- Reasons:\n- Reasons for Using Mkdocs: reasons/reasons.md\n- Setup:\n- Basic Mkdocs Setup: setup/setup.md\n- Extensions Setup: setup/extensions.md\n- Plugins Setup: setup/plugins.md - Deploy Setup: setup/deployment.md\n- Raw Pages:\n- Mkdocs yaml file: raw/mkdocs.md\n- Reasons file: raw/raw_reasons.md\n- Setup pages:\n- Basic Setup file: raw/raw_setup.md\n- Extensions file: raw/raw_exten.md\n- Plugin file: raw/raw_plugins.md\n- Deploy file: raw/deploy.md\n\n\nrepo_name: dansavino/mkdocs-basic-setup\nrepo_url: https://github.com/dansavino/mkdocs-basic-setup\n\ntheme:\nname: material\nlogo: assets/logo.svg\nfavicon: assets/favicon.png\nlanguage: en\nfeatures:\n- navigation.footer\n- navigation.indexes\n- navigation.sections\n- navigation.tabs\n- navigation.top\n- navigation.tracking\n- search.highlight\n- search.suggest\n- content.tabs.link\n- content.code.annotation\n- content.code.copy\n- content.code.annotate\n\npalette:\n- scheme: default\nprimary: deep orange\ntoggle:\nicon: material/weather-night\nname: Modo noturno\n- scheme: slate\nprimary: deep orange\ntoggle:\nicon: material/weather-sunny\nname: Modo claro\n\nmarkdown_extensions:\n- pymdownx.mark\n- pymdownx.tilde\n- pymdownx.highlight\n- pymdownx.superfences\n- pymdownx.details\n- admonition\n- attr_list\n- pymdownx.tabbed:\nalternate_style: true\n- pymdownx.emoji:\nemoji_index: !!python/name:materialx.emoji.twemoji\nemoji_generator: !!python/name:materialx.emoji.to_svg\n\nplugins:\n- search\n- i18n:\ndefault_language: en\ndocs_structure: suffix\nlanguages:\ndefault:\nname: English\nbuild: true\npt_BR:\nname: Portugu\u00eas\nbuild: true\n\nextra:\nsocial:\n- icon: fontawesome/brands/youtube\nlink: http://www.ipsense.com.br/youtube\n- icon: fontawesome/brands/github-alt\nlink: https://github.com/\n- icon: fontawesome/brands/facebook\nlink: http://www.ipsense.com.br/facebook\n- icon: fontawesome/brands/linkedin\nlink: http://www.ipsense.com.br/linkedin\n</code></pre></p>"},{"location":"raw/raw_exten/","title":"Extensions file","text":"<p>This webpage extensions.md file. <pre><code>    # Installing extentions \n\nIn order to add non-tradional elements to your page you will need to install [extensions](https://squidfunk.github.io/mkdocs-material/setup/extensions/)\n\n## Minimal Configuration Edit your configuration file (mkdocs.yml) and add the extensions:\n!!! warning inline end\nIf :exclamation: ==ModuleNotFoundError== :\n\nIts probably because you didn't specify it in the .yml file or the package is not available on your **venv** therefore you will need to install it using **pip install** ```yaml\n#Here are the extensions used in this documentation\nmarkdown_extensions:\n- pymdownx.mark\n- pymdownx.tilde\n- pymdownx.highlight\n- pymdownx.superfences\n- pymdownx.details\n- admonition\n- attr_list\n- pymdownx.tabbed:\nalternate_style: true\n- pymdownx.emoji:\nemoji_index: !!python/name:materialx.emoji.twemoji\nemoji_generator: !!python/name:materialx.emoji.to_svg\n```\n</code></pre></p>"},{"location":"raw/raw_plugins/","title":"Plugin file","text":"<p>This webpage plugins.md file. <pre><code>    # Configuring Plugins \n\n## Searching for Plugins\n\nSome of 3rd-party [plug-ins](https://github.com/mkdocs/mkdocs/wiki/MkDocs-Plugins)\n\n## Installing plugin\n\nMost of the plugins have a simple installation. Run ```pip install [plugin-name]```\n\nThen add plugin dependencies to mkdocs.yml file.\n\n``` yaml plugins:\n- name_plugin:\n- further_plugin_configuration\n- ...\n```\n## Seting multi-language plugin\nFor example here is how to set the \"static-i18n\" plugin\n!!! note This is the plugin used in this documentation\n\nThe plugin accepts two types of structures to derminate each languague. It can use folder or file suffix.\n\nPrimeiro instalar o plugin no ambiente virtual.\n```\npip install mkdocs-static-i18n\n```\n\nConfigurar o plugin no projeto. Abrir mkdocs.yml e editar.\n```yaml\nplugins:\n- search                                       - i18n:                                        # Plugin   \ndefault_language: en                       # Linguagem padr\u00e3o \ndocs_structure: suffix                     # Tipo de organiza\u00e7\u00e3o. Valor padr\u00e3o: \"suffix\"\nlanguages:                                 default:                                 # Configurar linguagem padr\u00e3o\nname: English                          # Nome de exibi\u00e7\u00e3o\nbuild: true\npt_BR:                                   # Configurar outra linguagem  \nname: Portugu\u00eas                        # Nome de exibi\u00e7\u00e3o\nbuild: true\n```\n\nUsando:\n\n``` { .sh .no-copy }  docs_structure: suffix\n```\n\nEstrutura dos arquivos:\n``` { .sh .no-copy }\n.\n\u2502  \u251c\u2500 docs/\n\u2502  \u251c\u2500 top_page1/                     # Subpasta - Guia superior\n\u2502  \u2502  \u251c\u2500 tab1.md/                    # Arquivo Markdown- conte\u00fado da p\u00e1gina - linguagem padr\u00e3o\n\u2502  \u2502  \u2514\u2500 tab1.suffix.md/             # Arquivo Markdown- conte\u00fado da p\u00e1gina - linguagem [suffix]\n\n```\n</code></pre></p>"},{"location":"raw/raw_reasons/","title":"Reasons file","text":"<p>This webpage reasons.md file. <pre><code>    # Why an Analytics Team Should Use MkDocs\nMkDocs is a static site generator that can be used to create documentation for software projects and other information. There are several reasons why an analytics team might benefit from using MkDocs:\n\n- **Easy collaboration**:  MkDocs allows for easy collaboration on documentation. Team members can write and edit documentation in markdown, which is simple to read and write. This makes it easy for team members to understand and contribute to the documentation.\n\n- **Organization**: With MkDocs, documentation can be organized into sections and sub-sections, making it easy to find the information you need. Additionally, MkDocs includes a built-in search feature, which allows users to quickly find the information they need.\n\n- **Version control**: MkDocs documentation can be version controlled with Git. This allows team members to easily see changes made to the documentation and roll back to previous versions if necessary.\n\n- **Previewing documentation**: MkDocs includes a built-in web server that allows team members to preview the documentation as they work on it. This makes it easy to see how the documentation will look before it is published.\n\n- **Easy to use**: MkDocs is easy to use and requires minimal setup. This allows team members to start creating documentation quickly, without needing to spend a lot of time on setup and configuration.\n\n- **Standard documentation**:  MkDocs is used by many applications. For example, FastApi, Starlett, MkDocs itself and its third-party extensions and plugins use the tool to create their documentation.\n\nOverall, MkDocs is a powerful tool that can help an analytics team to more easily create and maintain accurate, up-to-date documentation for their projects. It makes it easy to collaborate and organize documentation and also allows for easy previewing and version control.\n</code></pre></p>"},{"location":"raw/raw_setup/","title":"Basic Setup file","text":"<p>This website setup.md file. <pre><code>    # For a Basic Mkdocs Setup\n\n- You can follow the following steps:\n\n## 1. Create a directory folder for your documentation project\n!!! Example\n./projects/client1/documentation\n\n\n## 2. Create a virtual environment for good practice reasons\n\n!!! Cases\n\n=== \"If you have a requirements.txt file\"\nTerminal\n```{ .sh .no-copy }\n$ python3 -m venv mkdocs_venv\n$ source mkdocs_venv/bin/activate\n(mkdocs_venv) $ pip install -r requirements.txt\n```\nCopy Version\n```\npython3 -m venv mkdocs_venv\nsource mkdocs_venv/bin/activate\npip install -r requirements.txt\n```\n\n\n=== \"If you are making your own setup from scratch\"\n\nTerminal\n```{ .sh .no-copy }\n$ python3 -m venv mkdocs_venv\n$ source mkdocs_venv/bin/activate\n(mkdocs_venv) $ pip install mkdocs\n```\nCopy Version\n```\npython3 -m venv mkdocs_venv\nsource mkdocs_venv/bin/activate\npip install mkdocs\n```\n\n## 3. Starting your Mkdocs application\n- Open a console on your documentation folder and run:\n!!! Example\nEx: ./projects/client1/documentation\n\n(mkdocs_venv) ./projects/client1/documentation $ mkdocs new .  ```\nmkdocs new . ```\nThis will start your mkdocs application on the current folder.\n\n## 4. Choosing your theme\n\nFor some theme templates and further configuration go to [MkDocs-Themes](https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes)\n\nThis website theme is [MkDocs-Material](https://squidfunk.github.io/mkdocs-material/)\n\nIn order to use a third party theme you will need to install it frist.\n\n```\npip install mkdocs-material\n```\n\nThen add it to the main mkdocs configurate file.\nOpen mkdocs.yml file. ??? info This file was created on the previous step (  \"mkdocs new . \"  )\n```yaml\nsite_name: Basic Mkdocs Setup\n\ntheme:\nname: material # (1)!\n```\n\n1.  Themes also have features installed. In order to add them simply add a feature line in the yaml file.\n``` yaml\ntheme:\nname: material\nfeatures:\n-feature1\n-feature2   ```\n\n## 5. Making your page available in dark mode and light mode (Optional)\nOpen the mkdocs.yml file and add a palette scheme inside theme.\n```yaml\ntheme:\nname: material palette:\n- scheme: default\nprimary: deep orange\ntoggle:\nicon: material/weather-night\nname: Dark mode\n- scheme: slate\nprimary: deep orange\ntoggle:\nicon: material/weather-sunny\nname: Light mode\n```\n- **Ps** : The primary element will represent your main color.\n\nFor more options go to [Color-Scheme](https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/#color-scheme)\n\n## 6. Creating and edditing new contents  \n\nTo create more contents for your documation simply create a MarkDown(md) file. In order to edit and create your page open the *md file* and start your documentation following the markdown language pattern. &lt;br&gt;\nPS: You can add extensions to add features. For that go to the [Extensions Setup](./extensions.md)\n\n!!! Warning When using :\n``` yaml\nfeature:\n- navigation.tabs ```\nMarkDown file distribuition:\n``` { .sh .no-copy }\n.\n\u2502  \u251c\u2500 docs/\n\u2502  \u251c\u2500 top_page1/                     # Subfolder - Top Tab\n\u2502  \u2502  \u251c\u2500 tab1.md/                    # Markdown file - page content\n\u2502  \u2502  \u2514\u2500 tab2.md/                    # Markdown file - page content\n\u2502  \u251c\u2500 top_page2/                     # Subfolder - Top Tab\n\u2502  \u2502  \u251c\u2500 tab1.md/                    # Markdown file - page content\n\u2502  \u2502  \u2514\u2500 tab2.md/                    # Markdown file - page content\n```\nConfigure mkdocs.yml:    ``` yaml\nnav:\n- Page1 Name: - Tab1 Name: top_page1/tab1.md   # (1)!\n- Tab2 Name: top_page1/tab2.md  - Page2 Name: - Tab1 Name: top_page2/tab1.md   - Tab2 Name: top_page2/tab2.md  ```\n\n1.  In this documentation:  ``` yaml\nnav:\n- Getting Started:\n- Welcome to Mkdocs: home/index.md\n- Reasons:\n- Reasons for Using Mkdocs: reasons/reasons.md\n- Setup:\n- Basic Mkdocs Setup: setup/setup.md\n- Extensions Setup: setup/extensions.md\n```\n</code></pre></p>"},{"location":"reasons/reasons/","title":"Why an Analytics Team Should Use MkDocs","text":"<p>MkDocs is a static site generator that can be used to create documentation for software projects and other information. There are several reasons why an analytics team might benefit from using MkDocs:</p> <ul> <li> <p>Easy collaboration:  MkDocs allows for easy collaboration on documentation. Team members can write and edit documentation in markdown, which is simple to read and write. This makes it easy for team members to understand and contribute to the documentation.</p> </li> <li> <p>Organization: With MkDocs, documentation can be organized into sections and sub-sections, making it easy to find the information you need. Additionally, MkDocs includes a built-in search feature, which allows users to quickly find the information they need.</p> </li> <li> <p>Version control: MkDocs documentation can be version controlled with Git. This allows team members to easily see changes made to the documentation and roll back to previous versions if necessary.</p> </li> <li> <p>Previewing documentation: MkDocs includes a built-in web server that allows team members to preview the documentation as they work on it. This makes it easy to see how the documentation will look before it is published.</p> </li> <li> <p>Easy to use: MkDocs is easy to use and requires minimal setup. This allows team members to start creating documentation quickly, without needing to spend a lot of time on setup and configuration.</p> </li> <li> <p>Standard documentation:  MkDocs is used by many applications. For example, FastApi, Starlett, MkDocs itself and its third-party extensions and plugins use the tool to create their documentation.</p> </li> </ul> <p>Overall, MkDocs is a powerful tool that can help an analytics team to more easily create and maintain accurate, up-to-date documentation for their projects. It makes it easy to collaborate and organize documentation and also allows for easy previewing and version control.</p>"},{"location":"setup/deployment/","title":"Preparing for deployment","text":"<p>After you have a fully working page. Commit your project to GitHub and use GitHubPages or even ReadTheDocs to host it.</p> <ol> <li>Create your GitHub repositorie</li> <li>Inicialize git in your project page</li> <li>Commit your project to GitHub main branch</li> <li>Run mkdocs deploy command      <pre><code>mkdocs gh-deploy\n</code></pre></li> <li>Your documentation will be available in a couple minutes on https://{your-github-user}.github.io/{repositorie}</li> </ol> <p>Warning</p> <p>If mkdocs gh-deploy ran successfully and your page is not online. Check GitHubPages settings ou your repositorie. Make sure your source is branch gh-pages.</p> <p>Ps: The documentation can be add to ReadTheDocs by importing your GitHub project.</p>"},{"location":"setup/extensions/","title":"Installing extentions","text":"<p>In order to add non-tradional elements to your page you will need to install extensions</p>"},{"location":"setup/extensions/#minimal-configuration","title":"Minimal Configuration","text":"<p>Edit your configuration file (mkdocs.yml) and add the extensions:</p> <p>Warning</p> <p>If  ModuleNotFoundError :</p> <p>Its probably because you didn't specify it in the .yml file or the package is not available on your venv therefore you will need to install it using pip install </p> <pre><code>#Here are the extensions used in this documentation\nmarkdown_extensions:\n- pymdownx.mark\n- pymdownx.tilde\n- pymdownx.highlight\n- pymdownx.superfences\n- pymdownx.details\n- admonition\n- attr_list\n- pymdownx.tabbed:\nalternate_style: true\n- pymdownx.emoji:\nemoji_index: !!python/name:materialx.emoji.twemoji\nemoji_generator: !!python/name:materialx.emoji.to_svg\n</code></pre>"},{"location":"setup/plugins/","title":"Configuring Plugins","text":""},{"location":"setup/plugins/#searching-for-plugins","title":"Searching for Plugins","text":"<p>Some of 3rd-party plug-ins</p>"},{"location":"setup/plugins/#installing-plugin","title":"Installing plugin","text":"<p>Most of the plugins have a simple installation. </p> <p>Run <code>pip install [plugin-name]</code></p> <p>Then add plugin dependencies to mkdocs.yml file.</p> <pre><code>plugins:\n- name_plugin:\n- further_plugin_configuration\n- ...\n</code></pre>"},{"location":"setup/plugins/#seting-multi-language-plugin","title":"Seting multi-language plugin","text":"<p>For example here is how to set the \"static-i18n\" plugin</p> <p>Note</p> <p>This is the plugin used in this documentation</p> <p>The plugin accepts two types of structures to derminate each languague. It can use folder or file suffix.</p> <p>Primeiro instalar o plugin no ambiente virtual. <pre><code>pip install mkdocs-static-i18n\n</code></pre></p> <p>Configurar o plugin no projeto. Abrir mkdocs.yml e editar. <pre><code>plugins:\n- search                                       - i18n:                                        # Plugin   \ndefault_language: en                       # Linguagem padr\u00e3o \ndocs_structure: suffix                     # Tipo de organiza\u00e7\u00e3o. Valor padr\u00e3o: \"suffix\"\nlanguages:                                 default:                                 # Configurar linguagem padr\u00e3o\nname: English                          # Nome de exibi\u00e7\u00e3o\nbuild: true\npt_BR:                                   # Configurar outra linguagem  \nname: Portugu\u00eas                        # Nome de exibi\u00e7\u00e3o\nbuild: true\n</code></pre></p> <p>Usando:</p> <pre><code>docs_structure: suffix\n</code></pre> <p>Estrutura dos arquivos: <pre><code>    .\n    \u2502  \u251c\u2500 docs/\n    \u2502  \u251c\u2500 top_page1/                     # Subpasta - Guia superior\n\u2502  \u2502  \u251c\u2500 tab1.md/                    # Arquivo Markdown- conte\u00fado da p\u00e1gina - linguagem padr\u00e3o\n\u2502  \u2502  \u2514\u2500 tab1.suffix.md/             # Arquivo Markdown- conte\u00fado da p\u00e1gina - linguagem [suffix]\n</code></pre></p>"},{"location":"setup/setup/","title":"For a Basic Mkdocs Setup","text":"<ul> <li>You can follow the following steps:</li> </ul>"},{"location":"setup/setup/#1-create-a-directory-folder-for-your-documentation-project","title":"1. Create a directory folder for your documentation project","text":"<p>Example</p> <p>./projects/client1/documentation</p>"},{"location":"setup/setup/#2-create-a-virtual-environment-for-good-practice-reasons","title":"2. Create a virtual environment for good practice reasons","text":"<p>Cases</p> If you have a requirements.txt fileIf you are making your own setup from scratch <p>Terminal <pre><code>$ python3 -m venv mkdocs_venv\n$ source mkdocs_venv/bin/activate\n(mkdocs_venv) $ pip install -r requirements.txt\n</code></pre> Copy Version <pre><code>python3 -m venv mkdocs_venv\nsource mkdocs_venv/bin/activate\npip install -r requirements.txt\n</code></pre></p> <p>Terminal <pre><code>$ python3 -m venv mkdocs_venv\n$ source mkdocs_venv/bin/activate\n(mkdocs_venv) $ pip install mkdocs\n</code></pre> Copy Version <pre><code>python3 -m venv mkdocs_venv\nsource mkdocs_venv/bin/activate\npip install mkdocs\n</code></pre></p>"},{"location":"setup/setup/#3-starting-your-mkdocs-application","title":"3. Starting your Mkdocs application","text":"<ul> <li>Open a console on your documentation folder and run:</li> </ul> <p>Example</p> <p>Ex: ./projects/client1/documentation</p> <p>(mkdocs_venv) ./projects/client1/documentation $ mkdocs new .  </p> <pre><code>mkdocs new . \n</code></pre> <p>This will start your mkdocs application on the current folder.</p>"},{"location":"setup/setup/#4-choosing-your-theme","title":"4. Choosing your theme","text":"<p>For some theme templates and further configuration go to MkDocs-Themes</p> <p>This website theme is MkDocs-Material</p> <p>In order to use a third party theme you will need to install it frist.</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>Then add it to the main mkdocs configurate file. Open mkdocs.yml file. </p> Info <p>This file was created on the previous step (  \"mkdocs new . \"  )</p> <pre><code>site_name: Basic Mkdocs Setup\n\ntheme:\nname: material # (1)!\n</code></pre> <ol> <li>Themes also have features installed. In order to add them simply add a feature line in the yaml file.     <pre><code>theme:\nname: material\nfeatures:\n-feature1\n-feature2   </code></pre></li> </ol>"},{"location":"setup/setup/#5-making-your-page-available-in-dark-mode-and-light-mode-optional","title":"5. Making your page available in dark mode and light mode (Optional)","text":"<p>Open the mkdocs.yml file and add a palette scheme inside theme. <pre><code>theme:\nname: material palette:\n- scheme: default\nprimary: deep orange\ntoggle:\nicon: material/weather-night\nname: Dark mode\n- scheme: slate\nprimary: deep orange\ntoggle:\nicon: material/weather-sunny\nname: Light mode\n</code></pre> - Ps : The primary element will represent your main color.</p> <p>For more options go to Color-Scheme</p>"},{"location":"setup/setup/#6-creating-and-edditing-new-contents","title":"6. Creating and edditing new contents","text":"<p>To create more contents for your documation simply create a MarkDown(md) file. </p> <p>In order to edit and create your page open the md file and start your documentation following the markdown language pattern.  PS: You can add extensions to add features. For that go to the Extensions Setup</p> <p>Warning</p> <p>When using : <pre><code>feature:\n- navigation.tabs </code></pre> MarkDown file distribuition: <pre><code>.\n\u2502  \n\u251c\u2500 docs/\n\u2502  \u251c\u2500 top_page1/                     # Subfolder - Top Tab\n\u2502  \u2502  \u251c\u2500 tab1.md/                    # Markdown file - page content\n\u2502  \u2502  \u2514\u2500 tab2.md/                    # Markdown file - page content\n\u2502  \u251c\u2500 top_page2/                     # Subfolder - Top Tab\n\u2502  \u2502  \u251c\u2500 tab1.md/                    # Markdown file - page content\n\u2502  \u2502  \u2514\u2500 tab2.md/                    # Markdown file - page content\n</code></pre> Configure mkdocs.yml:    </p> <pre><code>nav:\n- Page1 Name: - Tab1 Name: top_page1/tab1.md   # (1)!\n- Tab2 Name: top_page1/tab2.md  - Page2 Name: - Tab1 Name: top_page2/tab1.md   - Tab2 Name: top_page2/tab2.md  </code></pre> <ol> <li>In this documentation: <pre><code>nav:\n- Getting Started:\n- Welcome to Mkdocs: home/index.md\n- Reasons:\n- Reasons for Using Mkdocs: reasons/reasons.md\n- Setup:\n- Basic Mkdocs Setup: setup/setup.md\n- Extensions Setup: setup/extensions.md\n</code></pre></li> </ol>"}]}